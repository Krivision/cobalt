name: Print Logs
description: Processes test results to produce a test summary and upload results to DataDog.
inputs:
  logfile_glob:
    description: "Path (or glob) to test log files."
    required: true
  test_status:
    description: "Test status. If the value is not success this step will fail."
    required: false
    default: 'success'
  symbolize:
    description: "If logs should be ran through crash symbolization tools."
    required: false
    default: 'false'
runs:
  using: "composite"
  steps:
    - name: Download Test Symbols
      if: inputs.symbolize == 'true'
      uses: actions/download-artifact@v4
      with:
        name: ${{ matrix.platform }}_${{ matrix.name }}_test_symbols
        path: out/${{ matrix.platform }}_${{ matrix.config }}/lib.unstripped/
    - run: |
        set -x
        # Enable globstar shell option for globstar paths e.g. /**/*.xml and
        # nullopt to returns empty string if the glob matches no files.
        shopt -s globstar nullglob

        log_files=(${{ inputs.logfile_glob }})

        if [ ${#log_files[@]} -eq 0 ]; then
          echo "::error::No log files were collected."
          exit 1
        else
          # TODO: Remove extra log file cat (in cases symbolization is broken above).
          cat ${log_file}
          for log_file in ${log_files[@]}; do
            if [ "${{ inputs.symbolize }}" == "true" ]; then
              # TODO(oxv): Enable when symbol files are available.
              cd src/
              cat ../${log_file} | python3 third_party/android_platform/development/scripts/stack.py --pass-through --output-directory out/${{ matrix.platform }}_${{ matrix.config }}/
            else
              cat ${log_file}
            fi
          done
        fi

        # By failing this step if tests failed the logs will be expanded by default.
        # Note that if any steps after this one fails the logs will no longer be expanded.
        if [ "${{ inputs.test_status }}" != "success" ]; then
          echo "Tests failed"
          exit 1
        fi
      shell: bash
